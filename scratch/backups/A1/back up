 Camera *test = new Camera(set_rows, set_columns, set_sampling_time); // creation of object

    if (test->queryParameters() == false)
    {
        system("clear"); // clear console
        std::cout << "Invalid Parameters. Please try again" << std::endl;
        std::cin.clear();
        std::cout << "Please enter the number of rows required for the image size: " << std::endl;

        while (!(std::cin >> set_rows) || set_rows < 0)
        {
            std::cin.clear();
            std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
            std::cout << "Invalid input, Try again: ";
        }

        std::cout << "Please enter the number of columns required for the image size: " << std::endl;
        while (!(std::cin >> set_columns) || set_columns < 0)
        {
            std::cin.clear();
            std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
            std::cout << "Invalid input, Try again: ";
        }

        std::cout << "Please enter the sampling required: " << std::endl;
        while (!(std::cin >> set_sampling_time) || set_sampling_time < 0)
        {
            std::cin.clear();
            std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
            std::cout << "Invalid input, Try again: ";
        }
        // adjust new adjusted user parameters
        test->setImageSize(set_rows, set_columns);
        test->setSamplingTime(set_sampling_time);
    }
    if (test->queryParameters() == true)
    {
        system("clear"); // clear console
        std::cout << "Based on Inputs the configuration is: " << std::endl;
        test->getData();
        std::cout << "Image Size (Rows x Columns):" << test->getImageSize() << "\n"
                  << "Sampling time :" << test->getSamplingTime() << " miliseconds" << std::endl;
        std::cout << set_rows << set_columns << set_sampling_time << std::endl;
        //delete test;
    }

        // auto time = std::chrono::system_clock::now();
        // while ((std::chrono::system_clock::now() - time) < std::chrono::seconds{5}) // while loop for time
        // {

        //     Camera data(set_rows, set_columns, set_sampling_time); // creation valid object of object

        //     data.getData();
        //     std::vector<std::vector<int>> output = data.printData();

        //     std::cout << "Sample #" << data.getSampleNumber() << std::endl;
        //     // print sensing range
        //     for (int i = 0; i < output.size(); i++)
        //     {
        //         for (int j = 0; j < output.at(i).size(); j++)
        //         {
        //             std::cout << "[" << output.at(i).at(j) << "] ";
        //         }
        //         std::cout << std::endl;
        //     }
        //     std::cout << "The Sampling time is: " << data.getSamplingTime() << " miliseconds \n"
        //               << std::endl;
        // }
    //}
